using Microsoft.AspNetCore.SignalR;

namespace ClassConnectBackend.Hubs
{
    public class ConnectionHub : Hub
    {
        public async Task JoinUserGroup(string userId)
        {
            await Groups.AddToGroupAsync(Context.ConnectionId, $"User_{userId}");
            Console.WriteLine($"‚úÖ User {userId} joined their group (Connection: {Context.ConnectionId})");
        }

        public async Task LeaveUserGroup(string userId)
        {
            await Groups.RemoveFromGroupAsync(Context.ConnectionId, $"User_{userId}");
            Console.WriteLine($"‚ùå User {userId} left their group (Connection: {Context.ConnectionId})");
        }

        public override async Task OnConnectedAsync()
        {
            Console.WriteLine($"üîó SignalR Connection established: {Context.ConnectionId}");
            await base.OnConnectedAsync();
        }

        public override async Task OnDisconnectedAsync(Exception exception)
        {
            Console.WriteLine($"üîó SignalR Connection disconnected: {Context.ConnectionId}");
            if (exception != null)
            {
                Console.WriteLine($"‚ùå Disconnection reason: {exception.Message}");
            }
            await base.OnDisconnectedAsync(exception);
        }
    }
}